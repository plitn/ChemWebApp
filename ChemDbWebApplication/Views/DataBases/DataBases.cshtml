@{
    Layout = "_Layout";
    ViewData["Title"] = "Базы данных";
    var pageNumber = (int)ViewData["pageNumber"];
}


@using Microsoft.AspNetCore.Http.Extensions
@using WebApplication2.Models
@model IEnumerable<WebApplication2.ITabled>
<div>
    <h1>Базы данных</h1>
    <br>
</div>
<div>
    <table class="table table-bordered table-striped" style="width: 100%">
        <thead style="vertical-align: baseline">
        <tr>
            <th style="font-size: large">
                №
            </th>
            <th>
                <div class="dropdown">
                    <button class="btn btn-secondary dropdown-toggle" href="#" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        @ViewData["Filter"]
                    </button>
                    <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                        <a class="dropdown-item" href="~/DataBases/DataBases?filter=По названию">По названию</a>
                        <a class="dropdown-item" href="~/DataBases/DataBases?filter=Организация разработчик">Организация разработчик</a>
                        <a class="dropdown-item" href="~/DataBases/DataBases?filter=Ключевые слова">Ключевые слова</a>
                    </div>
                </div>
            </th>
        </tr>
        </thead>
        <tbody>
        @{
            int maxBound = 0;
            if (pageNumber == Math.Ceiling(Model.Count() / 20.0))
            {
                maxBound = Model.Count();
            }
            else
            {
                maxBound = pageNumber * 20;
            }
        }
        @switch (Model)
        {
            case IEnumerable<KeywordsInfo>:
            {
                for (int i = (pageNumber - 1) * 20; i < maxBound; i++)
                {
                    KeywordsInfo keyword = ((IEnumerable<KeywordsInfo>) Model).ElementAt(i);
                    <tr>
                        <td>@keyword.KeywordID</td>
                        <td>
                            @if (string.IsNullOrEmpty(keyword.Keyword_eng))
                            {
                                <a href="~/KeyWord/KeyWord?id=@keyword.KeywordID">@keyword.Keyword_rus</a>
                            }
                            else
                            {
                                <a href="~/KeyWord/KeyWord?id=@keyword.KeywordID">@keyword.Keyword_eng</a>
                            }
                        </td>
                    </tr>
                }
                break;
            }
            case IEnumerable<Databases>:
            {
                for (int i = (pageNumber - 1) * 20; i < maxBound; i++)
                {
                    Databases db = ((IEnumerable<Databases>) Model).ElementAt(i);
                    <tr>
                        <td>
                            @db.DatabaseID
                        </td>
                        <td>
                            <a href="~/DbPage/DbPage?id=@db.DatabaseID">@db.Name_rus</a>
                        </td>
                    </tr>
                }
                break;
            }
            case IEnumerable<OrganisationsInfo>:
            {
                for (int i = (pageNumber - 1) * 20; i < maxBound; i++)
                {
                    OrganisationsInfo organisation = ((IEnumerable<OrganisationsInfo>) Model).ElementAt(i);
                    <tr>
                        <td>
                            @organisation.OrganisationID
                        </td>
                        <td>
                            <a href="~/OrganisationPage/OrganisationPage?id=@organisation.OrganisationID">
                                @if (string.IsNullOrEmpty(organisation.Name_rus))
                                {
                                    if (string.IsNullOrEmpty(organisation.Name_eng))
                                    {
                                        if (string.IsNullOrEmpty(organisation.Abbreviation_rus))
                                        {
                                            @organisation.Abbreviation_eng
                                        }
                                        else
                                        {
                                            @organisation.Abbreviation_rus
                                        }
                                    }
                                    else
                                    {
                                        @organisation.Name_eng
                                    }
                                }
                                else
                                {
                                    @organisation.Name_rus
                                }
                            </a>
                        </td>
                    </tr>
                }
                break;
            }
        }
        </tbody>
    </table>
</div>
<nav>
    @{
        var url = Context.Request.GetDisplayUrl();
        if (url.Contains("pgn"))
        {
            url = url.Substring(0, url.IndexOf("pgn") - 1);
        }
        string connector = "?";
        if (url.Contains("filter"))
        {
            connector = "&";
        }
        url += connector;
    }
    <ul class="pagination">
        @if (pageNumber == 1)
        {
            <li class="page-item disabled">
                <a class="page-link">Previous</a>
            </li>
        }
        else
        {
            int prevPage = pageNumber - 1;
            <li class="page-item">
                <a class="page-link" href="@(url)pgn=@prevPage">Previous</a>
            </li>
        }
        @for (int i = 0; i < Math.Ceiling(Model.Count() / 20.0); i++)
        {
            int j = i + 1;
            if (j == pageNumber)
            {
                <li class="page-item active" aria-current="page">
                    <a class="page-link" href="@(url)pgn=@pageNumber">@j</a>
                </li>
            }
            else
            {
                <li class="page-item">
                    <a class="page-link" href="@(url)pgn=@j">@j</a>
                </li>
            }
        }
        @if (pageNumber == (int)Math.Ceiling(Model.Count() / 20.0))
        {
            int nextPage = pageNumber + 1;
            <li class="page-item disabled">
                <a class="page-link">Next</a>
            </li>
        }
        else
        {
            int nextPage = pageNumber + 1;
            <li class="page-item">
                <a class="page-link" href="@(url)pgn=@nextPage">Next</a>
            </li>
        }
    </ul>
</nav>