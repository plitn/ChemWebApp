@using Microsoft.AspNetCore.Http.Extensions
@using WebApplication2.Models
@model IEnumerable<WebApplication2.Models.Databases>
@{
    Layout = "_Layout";
    var keywords = (IEnumerable<KeywordsInfo>)ViewData["keywords"];
    ViewBag.Title = "Ключевые слова";
    var pageNumber = (int)ViewData["pageNumber"];
}

<p>
    <button class="btn btn-primary" type="button" data-bs-toggle="collapse" data-bs-target="#collapseExample" aria-expanded="false" aria-controls="collapseExample">
        Показать фильтры
    </button>
</p>
<div class="collapse" id="collapseExample">
    @using (Html.BeginForm(new {action = "SubmitKeywords"}))
    {
        int index = 0;   
        <div class="table-responsive">
            <table class="table table-borderless">
                <tbody>
                @for (int i = 0; i < keywords.Count(); i += 3)
                {
                    <tr>
                        @for (int j = 0; j < 3; j++)
                        {
                            <td>
                                @{ var kw = keywords.ElementAt(i + j); }
                                <div class="form-check">
                                    <input type="checkbox" class="form-check-input" name="keywordsNames" id="@index" value="@kw.Keyword_rus"/>
                                    <label class="form-check-label" for="@index">
                                        @kw.Keyword_rus
                                    </label>
                                    @{ index++; }
                                </div>
                            </td>
                        }
                    </tr> 
                
                }
                </tbody>
            </table>
            <input type="submit" value="Submit"/>
        </div>
    }
</div>
        @{
            int maxBound = 0;
            if (pageNumber == Math.Ceiling(Model.Count() / 20.0))
            {
                maxBound = Model.Count();
            }
            else
            {
                maxBound = pageNumber * 20;
            }
        }
<div>
    <table class="table table-bordered table-striped" style="width: 100%">
        <thead>

        <tr>
            <th>№</th>
            <th>База данных</th>
        </tr>
        </thead>
        <tbody>
        @for (int i = (pageNumber - 1) * 20; i < maxBound; i++)
        {
            var db = Model.ElementAt(i);
            <tr>
                <td>
                    @db.DatabaseID
                </td>
                <td>
                    <a href="~/DbPage/DbPage?id=@db.DatabaseID">@db.Name_rus</a>
                </td>
            </tr>
        }
        </tbody>
    </table>
</div>
<nav>
    @{
        var url = Context.Request.GetDisplayUrl();
        if (url.Contains("pgn"))
        {
            url = url.Substring(0, url.IndexOf("pgn") - 1);
        }
        string connector = "?";
        if (url.Contains("filter"))
        {
            connector = "&";
        }
        url += connector;
    }
    <ul class="pagination">
        @if (pageNumber == 1)
        {
            <li class="page-item disabled">
                <a class="page-link">Previous</a>
            </li>
        }
        else
        {
            int prevPage = pageNumber - 1;
            <li class="page-item">
                <a class="page-link" href="@(url)pgn=@prevPage">Previous</a>
            </li>
        }
        @for (int i = 0; i < Math.Ceiling(Model.Count() / 20.0); i++)
        {
            int j = i + 1;
            if (j == pageNumber)
            {
                <li class="page-item active" aria-current="page">
                    <a class="page-link" href="@(url)pgn=@pageNumber">@j</a>
                </li>
            }
            else
            {
                <li class="page-item">
                    <a class="page-link" href="@(url)pgn=@j">@j</a>
                </li>
            }
        }
        @if (pageNumber == (int)Math.Ceiling(Model.Count() / 20.0))
        {
            int nextPage = pageNumber + 1;
            <li class="page-item disabled">
                <a class="page-link">Next</a>
            </li>
        }
        else
        {
            int nextPage = pageNumber + 1;
            <li class="page-item">
                <a class="page-link" href="@(url)pgn=@nextPage">Next</a>
            </li>
        }
    </ul>
</nav>